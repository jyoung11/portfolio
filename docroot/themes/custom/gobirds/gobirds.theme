<?php
/**
 * Set up global PHP functions to [re-]use
 */

function gobirds_preprocess_page(array &$variables) {
  // Check if the current route is node-related.
  if (\Drupal::routeMatch()->getParameter('node')) {
    // Load the node object.
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node instanceof \Drupal\node\NodeInterface) {
      // Pass the node to the page template.
      $variables['node'] = $node;
    }
  }
}

/**
 * Implements hook_preprocess_block().
 */
function gobirds_preprocess_block(&$variables) {
    // Ensure we are working with a block content entity.
    if (isset($variables['content']['#block_content'])) {
      $block = $variables['content']['#block_content'];
  
      // Check the block type ID to ensure we're targeting the right block.
      if ($block->bundle() == 'page_title') {
  
        // Get the values from the fields if they exist.
        if (!$block->get('field_page_title_white')->isEmpty()) {
          $variables['page_title_white'] = $block->get('field_page_title_white')->value;
        }
  
        if (!$block->get('field_page_title_orange')->isEmpty()) {
          $variables['page_title_orange'] = $block->get('field_page_title_orange')->value;
        }

        $node = \Drupal::routeMatch()->getParameter('node');
        if ($node) {
        // Add the node to the block variables.
        $variables['node'] = $node;
        }
      }

      if ($block->bundle() == 'basic') {
        // Check if the block has the field_padding field.
        if (isset($block->get('field_padding')->value)) {
          // Get the field_padding value.
          $field_padding = $block->get('field_padding')->value;
          // Add the field_padding value to the template variables.
          $variables['field_padding'] = $field_padding;

          foreach ($variables['content'] as &$field) {
            if (is_array($field) && isset($field['#theme']) && $field['#theme'] == 'field') {
              $field['#field_padding'] = $field_padding;
            }
          }
        }
        // Check if the block has the field_padding field.
        if (isset($block->get('field_padding_top')->value)) {
          // Get the field_padding value.
          $field_padding_top = $block->get('field_padding_top')->value;
          // Add the field_padding value to the template variables.
          $variables['field_padding_top'] = $field_padding_top;

          foreach ($variables['content'] as &$field) {
            if (is_array($field) && isset($field['#theme']) && $field['#theme'] == 'field') {
              $field['#field_padding_top'] = $field_padding_top;
            }
          }
        }
        // Check if the block has the field_top_border field.
        if ($block->hasField('field_top_border') && !$block->get('field_top_border')->isEmpty()) {
          $variables['field_top_border'] = (bool) $block->get('field_top_border')->value;
        } else {
          $variables['field_top_border'] = false;
        }
        // Check if the block has the field_top_border field.
        if ($block->hasField('field_right_indent') && !$block->get('field_right_indent')->isEmpty()) {
          $variables['field_right_indent'] = (bool) $block->get('field_right_indent')->value;
        } else {
          $variables['field_right_indent'] = false;
        }
      }

      // Check if we are working with the Copyright block.
      if ($block->bundle() == 'copyright') {
        // Pass the current year to the template.
        $variables['current_year'] = date('Y');

        // Get the site name from the configuration.
        $site_config = \Drupal::config('system.site');
        $variables['site_name'] = $site_config->get('name');
      }

      if ($block->bundle() == 'content_divider') {
        // Check if the block has the field_padding field.
        if (isset($block->get('field_padding')->value)) {
          // Get the field_padding value.
          $field_padding = $block->get('field_padding')->value;
          // Add the field_padding value to the template variables.
          $variables['field_padding'] = $field_padding;

          foreach ($variables['content'] as &$field) {
            if (is_array($field) && isset($field['#theme']) && $field['#theme'] == 'field') {
              $field['#field_padding'] = $field_padding;
            }
          }
        }
        // Check if the block has the field_padding field.
        if (isset($block->get('field_padding_top')->value)) {
          // Get the field_padding value.
          $field_padding_top = $block->get('field_padding_top')->value;
          // Add the field_padding value to the template variables.
          $variables['field_padding_top'] = $field_padding_top;

          foreach ($variables['content'] as &$field) {
            if (is_array($field) && isset($field['#theme']) && $field['#theme'] == 'field') {
              $field['#field_padding_top'] = $field_padding_top;
            }
          }
        }
      }
    }
  }


  /**
   * Implements hook_preprocess_HOOK() for media templates.
 */
function gobirds_preprocess_media(array &$variables) {
  $media = $variables['media'];

  // Ensure the custom fields are available in the template.
  if ($media->hasField('field_image_title')) {
    $field_image_title_value = $media->get('field_image_title')->value;
    if (!empty($field_image_title_value)) {
      $variables['content']['field_image_title'] = [
        '#markup' => $field_image_title_value,
      ];
    }
  }

  if ($media->hasField('field_image_description')) {
    $field_image_description_value = $media->get('field_image_description')->value;
    if (!empty($field_image_description_value)) {
      $variables['content']['field_image_description'] = [
        '#markup' => $field_image_description_value,
      ];
    }
  }

  // Ensure the custom fields are available in the template.
  if ($media->hasField('field_video_title')) {
    $field_video_title_value = $media->get('field_video_title')->value;
    if (!empty($field_video_title_value)) {
      $variables['content']['field_video_title'] = [
        '#markup' => $field_video_title_value,
      ];
    }
  }

  if ($media->hasField('field_video_description')) {
    $field_video_description_value = $media->get('field_video_description')->value;
    if (!empty($field_video_description_value)) {
      $variables['content']['field_video_description'] = [
        '#markup' => $field_video_description_value,
      ];
    }
  }
  if ($media->hasField('field_custom_image')) {
    // Get the file entity referenced by the custom image field.
    $custom_image_file = $media->get('field_custom_image')->entity;
    if ($custom_image_file) {
        // Get the URL of the file.
        $custom_image_url = \Drupal::service('file_url_generator')->generateAbsoluteString($custom_image_file->getFileUri());
        if (!empty($custom_image_url)) {
          $variables['custom_image_url'] = $custom_image_url;
            $variables['content']['field_custom_image'] = [
                '#markup' => $custom_image_url,
            ];
        }
        if ($media->hasField('field_media_oembed_video')) {
          // Get the file entity referenced by the custom image field.
          $oembed_video = $media->get('field_media_oembed_video')->value;
          if ($oembed_video) {
              if (!empty($custom_image_url)) {
                $variables['oembed_video'] = $oembed_video;
                  $variables['content']['oembed_url'] = [
                      '#markup' => $oembed_video,
                  ];
              }
          }
        }
    }
  }


}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add custom template suggestion for the field_ebt_image field in block content.
 *
 * @inheritdoc
 */
function gobirds_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  // Check if the field is the one you want to target.
  if ($variables['element']['#field_name'] == 'field_ebt_image' && $variables['element']['#entity_type'] == 'block_content') {
    // Add a custom template suggestion.
    $suggestions[] = 'field__block_content__field_ebt_image__custom';
  }
}

/**
 * Implements hook_preprocess_HOOK() for google_map_field templates.
 */
function gobirds_preprocess_google_map_field(array &$variables) {
  // Fetch the API key from the configuration.
  $config = \Drupal::config('google_map_field.settings');
  $api_key = $config->get('google_map_field_apikey');

  // Pass the API key to the template.
  $variables['api_key'] = $api_key;
}

/**
 * Implements hook_preprocess_HOOK() for image templates.
 */
function gobirds_preprocess_image(&$variables) {
  // Check if the media entity is available and is of type 'remote_video'.
  if (isset($variables['media']) && $variables['media']->bundle() == 'remote_video') {
    // Check if the media entity has the custom image field.
    if ($variables['media']->hasField('field_custom_image')) {
      // Get the custom image URL.
      $custom_image = $variables['element']['#object']->custom_image_url;
      if ($custom_image) {
        $variables['custom_image_url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($custom_image->getFileUri());
      }
    }
  }
}
